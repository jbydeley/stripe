/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface StripePay {
    /**
    * The amount to charge
    */
    'amount': number;
    /**
    * The currency to use
    */
    'currency': string;
    /**
    * The description of the product
    */
    'description': string;
    /**
    * The image to use in the stripe popup
    */
    'image': string;
    /**
    * The stripe key to charge against
    */
    'key': string;
    /**
    * The locale to use in the stripe popup
    */
    'locale': string;
    /**
    * The name of the product
    */
    'name': string;
    /**
    * Open the stripe popup to accept payment
    */
    'openStripe': ({ name, description, currency, amount }: { name: any; description: any; currency: any; amount: any; }) => void;
    /**
    * Try to require zip code in the stripe popup
    */
    'zipcode': boolean;
  }
  interface StripePayAttributes extends StencilHTMLAttributes {
    /**
    * The amount to charge
    */
    'amount'?: number;
    /**
    * The currency to use
    */
    'currency'?: string;
    /**
    * The description of the product
    */
    'description'?: string;
    /**
    * The image to use in the stripe popup
    */
    'image'?: string;
    /**
    * The stripe key to charge against
    */
    'key'?: string;
    /**
    * The locale to use in the stripe popup
    */
    'locale'?: string;
    /**
    * The name of the product
    */
    'name'?: string;
    /**
    * Called when the stripe popup is closed
    */
    'onOnClose'?: (event: CustomEvent) => void;
    /**
    * Called when a token is received after payment
    */
    'onOnToken'?: (event: CustomEvent) => void;
    /**
    * Try to require zip code in the stripe popup
    */
    'zipcode'?: boolean;
  }
}

declare global {
  interface StencilElementInterfaces {
    'StripePay': Components.StripePay;
  }

  interface StencilIntrinsicElements {
    'stripe-pay': Components.StripePayAttributes;
  }


  interface HTMLStripePayElement extends Components.StripePay, HTMLStencilElement {}
  var HTMLStripePayElement: {
    prototype: HTMLStripePayElement;
    new (): HTMLStripePayElement;
  };

  interface HTMLElementTagNameMap {
    'stripe-pay': HTMLStripePayElement
  }

  interface ElementTagNameMap {
    'stripe-pay': HTMLStripePayElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
